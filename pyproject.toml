# ━━━━━━━━━━━━━━━━━━━━━━━━━━ Build System ━━━━━━━━━━━━━━━━━━━━━━━━━━ #

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Project ━━━━━━━━━━━━━━━━━━━━━━━━━━━━ #

[project]
name = "soccerdata"
version = "1.8.7"
description = "A collection of scrapers for soccer data from various websites / APIs."
authors = [
    { name = "Pieter Robberechts", email = "pieter.robberechts@kuleuven.be"}
]
license = "Apache-2.0"
readme = 'README.rst'
keywords = ["soccer", "football", "soccer data", "web scraping", "soccer analytics"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent"
]

# ━━━━━━━━━━━━━━━━━━━━━━ Primary Dependencies ━━━━━━━━━━━━━━━━━━━━━━ #

requires-python = ">=3.9,<3.14"
dependencies = [
    "html5lib>=1.1,<2.0.0",
    "pandas>=2.0.0,!=2.1.0,<3.0.0",
    "wrapper-tls-requests>=1.1.4,<2.0.0",
    "tqdm>=4.67.1,<5.0.0",
    "rich>=14.0.0,<15.0.0",
    "seleniumbase>=4.38.2,<5.0.0",
    "unidecode>=1.4.0,<2.0.0",
    "urllib3<2",
    "lxml>=5.0.0; python_version >= '3.13'",
    "lxml>=4.9.4; python_version < '3.13'"
]

[project.optional-dependencies]
socceraction = [
    "socceraction",
]

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ URLs ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ #
[project.urls]
Homepage = "https://github.com/probberechts/soccerdata"
Repository = "https://github.com/probberechts/soccerdata"
Documentation = "https://soccerdata.readthedocs.io"
Changelog = "https://github.com/probberechts/soccerdata/releases"

# ━━━━━━━━━━━━━━━━━━━━━━━ Extra Dependencies ━━━━━━━━━━━━━━━━━━━━━━━ #

[dependency-groups]
# Linting and type-checking
lint = [
    "ruff",
    "mypy",
    "pyright>=1.1.403",
    "pre-commit>=4.0.0,<5.0.0",
]

# Testing
test = [
    "pytest>=8.0.0,<9.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "pytest-cov>=6.2.1",
    "time-machine>=2.8.2,<3.0.0",
    "dvc[gs]>=3.62.0",
]

# Versioning and automation
release = [
    "bump-my-version>=1.2.1",
]

# Documentation
docs = [
    "Sphinx>=7.0.0,<8.0.0",
    "furo>=2024.0.0,<2025.0.0",
    "nbsphinx>=0.9.0,<1.0.0",
    "sphinx-autobuild>=2024.0.0,<2025.0.0",
]

# Example notebooks
notebooks = [
    "ipykernel>=6.29.5",
    "matplotlib>=3.9.4",
    "seaborn>=0.13.2",
]

[tool.uv]
default-groups = [
    "lint",
    "test",
    "release",
    "docs",
    "notebooks",
]

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Ruff ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ #

[tool.ruff]
src = ['soccerdata', 'tests']
line-length = 99
target-version = 'py39'

[tool.ruff.lint]
ignore = ['B904']

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ['F401']
"tests/*" = [
    'S',
    'D212',
    'D415',
    'D205',
    'D103',
    'D104',
    'N999',
    'SLF001',
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = 'numpy'

[tool.ruff.lint.isort]
known-first-party = ["soccerdata", "tests"]


# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Pytest ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ #

[tool.pytest.ini_options]
testpaths = ["tests"]
log_file = "./logs/pytest.log"
addopts = """
--tb=long
--code-highlight=yes
"""

[tool.coverage.paths]
source = ["soccerdata", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["soccerdata", "tests"]

[tool.coverage.report]
show_missing = true
ignore_errors = true

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ MyPy ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ #

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
check_untyped_defs = true
show_error_codes = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ Pyright ━━━━━━━━━━━━━━━━━━━━━━━━━━━━ #

[tool.pyright]
include = ["soccerdata"]
exclude = [
  "**/__pycache__",
  ".venv",
]
venvPath = "."
venv = ".venv"

# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━ bumpversion ━━━━━━━━━━━━━━━━━━━━━━━━━━━ #

[tool.bumpversion]
current_version = "1.8.7"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = false
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
moveable_tags = []
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []


[[tool.bumpversion.files]]
filename = "soccerdata/__init__.py"

[[tool.bumpversion.files]]
filename = "docs/conf.py"
